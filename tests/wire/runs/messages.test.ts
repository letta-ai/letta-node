/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { LettaClient } from "../../../src/Client";

describe("Messages", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new LettaClient({ token: "test", project: "test", environment: server.baseUrl });

        const rawResponseBody = [
            {
                id: "id",
                date: "2024-01-15T09:30:00Z",
                name: "name",
                message_type: "system_message",
                otid: "otid",
                sender_id: "sender_id",
                step_id: "step_id",
                is_err: true,
                content: "content",
            },
        ];
        server
            .mockEndpoint()
            .get("/v1/runs/run_id/messages")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.runs.messages.list("run_id");
        expect(response).toEqual([
            {
                id: "id",
                date: "2024-01-15T09:30:00Z",
                name: "name",
                message_type: "system_message",
                otid: "otid",
                sender_id: "sender_id",
                step_id: "step_id",
                is_err: true,
                content: "content",
            },
        ]);
    });
});
