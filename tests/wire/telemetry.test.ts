/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { LettaClient } from "../../src/Client";

describe("Telemetry", () => {
    test("retrieve_provider_trace", async () => {
        const server = mockServerPool.createServer();
        const client = new LettaClient({ token: "test", project: "test", environment: server.baseUrl });

        const rawResponseBody = {
            created_by_id: "created_by_id",
            last_updated_by_id: "last_updated_by_id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            id: "provider_trace-123e4567-e89b-12d3-a456-426614174000",
            request_json: { key: "value" },
            response_json: { key: "value" },
            step_id: "step_id",
        };
        server
            .mockEndpoint()
            .get("/v1/telemetry/step_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.telemetry.retrieveProviderTrace("step_id");
        expect(response).toEqual({
            created_by_id: "created_by_id",
            last_updated_by_id: "last_updated_by_id",
            created_at: "2024-01-15T09:30:00Z",
            updated_at: "2024-01-15T09:30:00Z",
            id: "provider_trace-123e4567-e89b-12d3-a456-426614174000",
            request_json: {
                key: "value",
            },
            response_json: {
                key: "value",
            },
            step_id: "step_id",
        });
    });
});
