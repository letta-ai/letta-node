/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { LettaClient } from "../../../src/Client";

describe("CoreMemory", () => {
    test("retrieve", async () => {
        const server = mockServerPool.createServer();
        const client = new LettaClient({ token: "test", project: "test", environment: server.baseUrl });

        const rawResponseBody = {
            blocks: [
                {
                    value: "value",
                    limit: 1,
                    project_id: "project_id",
                    name: "name",
                    is_template: true,
                    preserve_on_migration: true,
                    label: "label",
                    read_only: true,
                    description: "description",
                    metadata: { key: "value" },
                    id: "block-123e4567-e89b-12d3-a456-426614174000",
                    created_by_id: "created_by_id",
                    last_updated_by_id: "last_updated_by_id",
                },
            ],
            file_blocks: [
                {
                    value: "value",
                    limit: 1,
                    project_id: "project_id",
                    name: "name",
                    is_template: true,
                    preserve_on_migration: true,
                    label: "label",
                    read_only: true,
                    description: "description",
                    metadata: { key: "value" },
                    id: "block-123e4567-e89b-12d3-a456-426614174000",
                    created_by_id: "created_by_id",
                    last_updated_by_id: "last_updated_by_id",
                    file_id: "file_id",
                    source_id: "source_id",
                    is_open: true,
                    last_accessed_at: "2024-01-15T09:30:00Z",
                },
            ],
            prompt_template: "prompt_template",
        };
        server
            .mockEndpoint()
            .get("/v1/agents/agent_id/core-memory")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.agents.coreMemory.retrieve("agent_id");
        expect(response).toEqual({
            blocks: [
                {
                    value: "value",
                    limit: 1,
                    project_id: "project_id",
                    name: "name",
                    is_template: true,
                    preserve_on_migration: true,
                    label: "label",
                    read_only: true,
                    description: "description",
                    metadata: {
                        key: "value",
                    },
                    id: "block-123e4567-e89b-12d3-a456-426614174000",
                    created_by_id: "created_by_id",
                    last_updated_by_id: "last_updated_by_id",
                },
            ],
            file_blocks: [
                {
                    value: "value",
                    limit: 1,
                    project_id: "project_id",
                    name: "name",
                    is_template: true,
                    preserve_on_migration: true,
                    label: "label",
                    read_only: true,
                    description: "description",
                    metadata: {
                        key: "value",
                    },
                    id: "block-123e4567-e89b-12d3-a456-426614174000",
                    created_by_id: "created_by_id",
                    last_updated_by_id: "last_updated_by_id",
                    file_id: "file_id",
                    source_id: "source_id",
                    is_open: true,
                    last_accessed_at: "2024-01-15T09:30:00Z",
                },
            ],
            prompt_template: "prompt_template",
        });
    });
});
