/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Letta from "../index.js";

export interface AgentSchema {
    agent_type: string;
    core_memory: Letta.CoreMemoryBlockSchema[];
    created_at: string;
    description?: string;
    embedding_config: Letta.EmbeddingConfig;
    llm_config: Letta.LlmConfig;
    message_buffer_autoclear: boolean;
    in_context_message_indices: number[];
    messages: Letta.MessageSchema[];
    metadata_?: Record<string, unknown>;
    multi_agent_group?: unknown;
    name: string;
    system: string;
    tags: Letta.TagSchema[];
    tool_exec_environment_variables: Letta.ToolEnvVarSchema[];
    tool_rules: AgentSchema.ToolRules.Item[];
    tools: Letta.ToolSchema[];
    updated_at: string;
    version: string;
}

export namespace AgentSchema {
    export type ToolRules = ToolRules.Item[];

    export namespace ToolRules {
        export type Item =
            | Letta.BaseToolRuleSchema
            | Letta.ChildToolRuleSchema
            | Letta.MaxCountPerStepToolRuleSchema
            | Letta.ConditionalToolRuleSchema;
    }
}
