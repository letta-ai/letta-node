/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Letta from "../index.js";

export interface Step {
    /** The id of the step. Assigned by the database. */
    id: string;
    /** The surface that this agent step was initiated from. */
    origin?: string;
    /** The unique identifier of the provider that was configured for this step */
    provider_id?: string;
    /** The unique identifier of the job that this step belongs to. Only included for async calls. */
    job_id?: string;
    /** The ID of the agent that performed the step. */
    agent_id?: string;
    /** The name of the provider used for this step. */
    provider_name?: string;
    /** The category of the provider used for this step. */
    provider_category?: string;
    /** The name of the model used for this step. */
    model?: string;
    /** The model endpoint url used for this step. */
    model_endpoint?: string;
    /** The context window limit configured for this step. */
    context_window_limit?: number;
    /** The number of tokens generated by the agent during this step. */
    completion_tokens?: number;
    /** The number of tokens in the prompt during this step. */
    prompt_tokens?: number;
    /** The total number of tokens processed by the agent during this step. */
    total_tokens?: number;
    /** Metadata for the agent. */
    completion_tokens_details?: Record<string, unknown>;
    /** The stop reason associated with the step. */
    stop_reason?: Letta.StopReasonType;
    /** Metadata tags. */
    tags?: string[];
    /** The unique identifier of the transaction that processed this step. */
    tid?: string;
    /** The trace id of the agent step. */
    trace_id?: string;
    /** The messages generated during this step. */
    messages?: Letta.Message[];
    /** The feedback for this step. Must be either 'positive' or 'negative'. */
    feedback?: Step.Feedback;
    /** The project that the agent that executed this step belongs to (cloud only). */
    project_id?: string;
}

export namespace Step {
    export type Feedback = "positive" | "negative";
    export const Feedback = {
        Positive: "positive",
        Negative: "negative",
    } as const;
}
