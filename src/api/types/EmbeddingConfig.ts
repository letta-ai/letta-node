/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Embedding model configuration. This object specifies all the information necessary to access an embedding model to usage with Letta, except for secret keys.
 *
 * Attributes:
 *     embedding_endpoint_type (str): The endpoint type for the model.
 *     embedding_endpoint (str): The endpoint for the model.
 *     embedding_model (str): The model for the embedding.
 *     embedding_dim (int): The dimension of the embedding.
 *     embedding_chunk_size (int): The chunk size of the embedding.
 *     azure_endpoint (:obj:`str`, optional): The Azure endpoint for the model (Azure only).
 *     azure_version (str): The Azure version for the model (Azure only).
 *     azure_deployment (str): The Azure deployment for the model (Azure only).
 */
export interface EmbeddingConfig {
    /** The endpoint type for the model. */
    embedding_endpoint_type: EmbeddingConfig.EmbeddingEndpointType;
    /** The endpoint for the model (`None` if local). */
    embedding_endpoint?: string;
    /** The model for the embedding. */
    embedding_model: string;
    /** The dimension of the embedding. */
    embedding_dim: number;
    /** The chunk size of the embedding. */
    embedding_chunk_size?: number;
    /** The handle for this config, in the format provider/model-name. */
    handle?: string;
    /** The maximum batch size for processing embeddings. */
    batch_size?: number;
    /** The Azure endpoint for the model. */
    azure_endpoint?: string;
    /** The Azure version for the model. */
    azure_version?: string;
    /** The Azure deployment for the model. */
    azure_deployment?: string;
}

export namespace EmbeddingConfig {
    /**
     * The endpoint type for the model.
     */
    export type EmbeddingEndpointType =
        | "openai"
        | "anthropic"
        | "bedrock"
        | "cohere"
        | "google_ai"
        | "google_vertex"
        | "azure"
        | "groq"
        | "ollama"
        | "webui"
        | "webui-legacy"
        | "lmstudio"
        | "lmstudio-legacy"
        | "llamacpp"
        | "koboldcpp"
        | "vllm"
        | "hugging-face"
        | "mistral"
        | "together"
        | "pinecone";
    export const EmbeddingEndpointType = {
        Openai: "openai",
        Anthropic: "anthropic",
        Bedrock: "bedrock",
        Cohere: "cohere",
        GoogleAi: "google_ai",
        GoogleVertex: "google_vertex",
        Azure: "azure",
        Groq: "groq",
        Ollama: "ollama",
        Webui: "webui",
        WebuiLegacy: "webui-legacy",
        Lmstudio: "lmstudio",
        LmstudioLegacy: "lmstudio-legacy",
        Llamacpp: "llamacpp",
        Koboldcpp: "koboldcpp",
        Vllm: "vllm",
        HuggingFace: "hugging-face",
        Mistral: "mistral",
        Together: "together",
        Pinecone: "pinecone",
    } as const;
}
