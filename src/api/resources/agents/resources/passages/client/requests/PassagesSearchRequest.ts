/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Letta from "../../../../../../index";

/**
 * @example
 *     {
 *         query: "query"
 *     }
 */
export interface PassagesSearchRequest {
    /**
     * String to search for using semantic similarity
     */
    query: string;
    /**
     * Optional list of tags to filter search results
     */
    tags?: string | string[];
    /**
     * How to match tags - 'any' to match passages with any of the tags, 'all' to match only passages with all tags
     */
    tagMatchMode?: Letta.agents.PassagesSearchRequestTagMatchMode;
    /**
     * Maximum number of results to return. Uses system default if not specified
     */
    topK?: number;
    /**
     * Filter results to passages created after this datetime
     */
    startDatetime?: Date;
    /**
     * Filter results to passages created before this datetime
     */
    endDatetime?: Date;
}
