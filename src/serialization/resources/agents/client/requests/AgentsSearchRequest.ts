/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Letta from "../../../../../api/index";
import * as core from "../../../../../core";
import { AgentsSearchRequestSearchItem } from "../../types/AgentsSearchRequestSearchItem";
import { AgentsSearchRequestSortBy } from "../../types/AgentsSearchRequestSortBy";

export const AgentsSearchRequest: core.serialization.Schema<
    serializers.AgentsSearchRequest.Raw,
    Letta.AgentsSearchRequest
> = core.serialization.object({
    search: core.serialization.list(AgentsSearchRequestSearchItem).optional(),
    projectId: core.serialization.property("project_id", core.serialization.string().optional()),
    combinator: core.serialization.stringLiteral("AND").optional(),
    limit: core.serialization.number().optional(),
    after: core.serialization.string().optional(),
    sortBy: AgentsSearchRequestSortBy.optional(),
    ascending: core.serialization.boolean().optional(),
});

export declare namespace AgentsSearchRequest {
    export interface Raw {
        search?: AgentsSearchRequestSearchItem.Raw[] | null;
        project_id?: string | null;
        combinator?: "AND" | null;
        limit?: number | null;
        after?: string | null;
        sortBy?: AgentsSearchRequestSortBy.Raw | null;
        ascending?: boolean | null;
    }
}
