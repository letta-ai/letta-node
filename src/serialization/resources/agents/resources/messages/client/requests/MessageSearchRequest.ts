/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../index";
import * as Letta from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { MessageSearchRequestSearchMode } from "../../types/MessageSearchRequestSearchMode";
import { MessageRole } from "../../../../../../types/MessageRole";

export const MessageSearchRequest: core.serialization.Schema<
    serializers.agents.MessageSearchRequest.Raw,
    Letta.agents.MessageSearchRequest
> = core.serialization.object({
    queryText: core.serialization.property("query_text", core.serialization.string().optional()),
    searchMode: core.serialization.property("search_mode", MessageSearchRequestSearchMode.optional()),
    roles: core.serialization.list(MessageRole).optional(),
    projectId: core.serialization.property("project_id", core.serialization.string().optional()),
    limit: core.serialization.number().optional(),
    startDate: core.serialization.property("start_date", core.serialization.date().optional()),
    endDate: core.serialization.property("end_date", core.serialization.date().optional()),
});

export declare namespace MessageSearchRequest {
    export interface Raw {
        query_text?: string | null;
        search_mode?: MessageSearchRequestSearchMode.Raw | null;
        roles?: MessageRole.Raw[] | null;
        project_id?: string | null;
        limit?: number | null;
        start_date?: string | null;
        end_date?: string | null;
    }
}
