/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../index";
import * as Letta from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { MessageCreate } from "../../../../../../types/MessageCreate";
import { LettaRequestConfig } from "../../../../../../types/LettaRequestConfig";

export const LettaStreamingRequest: core.serialization.Schema<
    serializers.agents.LettaStreamingRequest.Raw,
    Letta.agents.LettaStreamingRequest
> = core.serialization.object({
    messages: core.serialization.list(MessageCreate),
    config: LettaRequestConfig.optional(),
    streamTokens: core.serialization.property("stream_tokens", core.serialization.boolean().optional()),
});

export declare namespace LettaStreamingRequest {
    export interface Raw {
        messages: MessageCreate.Raw[];
        config?: LettaRequestConfig.Raw | null;
        stream_tokens?: boolean | null;
    }
}
