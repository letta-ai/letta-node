/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Letta from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { UpdateSystemMessage } from "../../../../../types/UpdateSystemMessage";
import { UpdateUserMessage } from "../../../../../types/UpdateUserMessage";
import { UpdateReasoningMessage } from "../../../../../types/UpdateReasoningMessage";
import { UpdateAssistantMessage } from "../../../../../types/UpdateAssistantMessage";

export const MessagesModifyResponse: core.serialization.Schema<
    serializers.agents.MessagesModifyResponse.Raw,
    Letta.agents.MessagesModifyResponse
> = core.serialization.undiscriminatedUnion([
    UpdateSystemMessage,
    UpdateUserMessage,
    UpdateReasoningMessage,
    UpdateAssistantMessage,
]);

export declare namespace MessagesModifyResponse {
    export type Raw =
        | UpdateSystemMessage.Raw
        | UpdateUserMessage.Raw
        | UpdateReasoningMessage.Raw
        | UpdateAssistantMessage.Raw;
}
