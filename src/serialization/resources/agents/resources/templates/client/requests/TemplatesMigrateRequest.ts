/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../index";
import * as Letta from "../../../../../../../api/index";
import * as core from "../../../../../../../core";

export const TemplatesMigrateRequest: core.serialization.Schema<
    serializers.agents.TemplatesMigrateRequest.Raw,
    Letta.agents.TemplatesMigrateRequest
> = core.serialization.object({
    toTemplate: core.serialization.property("to_template", core.serialization.string()),
    variables: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    preserveCoreMemories: core.serialization.property("preserve_core_memories", core.serialization.boolean()),
    preserveToolVariables: core.serialization.property(
        "preserve_tool_variables",
        core.serialization.boolean().optional(),
    ),
});

export declare namespace TemplatesMigrateRequest {
    export interface Raw {
        to_template: string;
        variables?: Record<string, string> | null;
        preserve_core_memories: boolean;
        preserve_tool_variables?: boolean | null;
    }
}
