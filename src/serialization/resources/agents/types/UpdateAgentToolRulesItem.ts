/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { ChildToolRule } from "../../../types/ChildToolRule";
import { InitToolRule } from "../../../types/InitToolRule";
import { TerminalToolRule } from "../../../types/TerminalToolRule";
import { ConditionalToolRule } from "../../../types/ConditionalToolRule";

export const UpdateAgentToolRulesItem: core.serialization.Schema<
    serializers.UpdateAgentToolRulesItem.Raw,
    Letta.UpdateAgentToolRulesItem
> = core.serialization.undiscriminatedUnion([ChildToolRule, InitToolRule, TerminalToolRule, ConditionalToolRule]);

export declare namespace UpdateAgentToolRulesItem {
    type Raw = ChildToolRule.Raw | InitToolRule.Raw | TerminalToolRule.Raw | ConditionalToolRule.Raw;
}
