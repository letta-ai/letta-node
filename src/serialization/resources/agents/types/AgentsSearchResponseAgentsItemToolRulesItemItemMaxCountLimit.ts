/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimitType } from "./AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimitType";

export const AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimit: core.serialization.ObjectSchema<
    serializers.AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimit.Raw,
    Letta.AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimit
> = core.serialization.object({
    toolName: core.serialization.property("tool_name", core.serialization.string()),
    type: AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimitType.optional(),
    maxCountLimit: core.serialization.property("max_count_limit", core.serialization.number()),
});

export declare namespace AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimit {
    export interface Raw {
        tool_name: string;
        type?: AgentsSearchResponseAgentsItemToolRulesItemItemMaxCountLimitType.Raw | null;
        max_count_limit: number;
    }
}
