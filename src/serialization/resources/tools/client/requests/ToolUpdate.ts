/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Letta from "../../../../../api/index";
import * as core from "../../../../../core";
import { PipRequirement } from "../../../../types/PipRequirement";
import { NpmRequirement } from "../../../../types/NpmRequirement";

export const ToolUpdate: core.serialization.Schema<serializers.ToolUpdate.Raw, Letta.ToolUpdate> =
    core.serialization.object({
        description: core.serialization.string().optional(),
        tags: core.serialization.list(core.serialization.string()).optional(),
        sourceCode: core.serialization.property("source_code", core.serialization.string().optional()),
        sourceType: core.serialization.property("source_type", core.serialization.string().optional()),
        jsonSchema: core.serialization.property(
            "json_schema",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        argsJsonSchema: core.serialization.property(
            "args_json_schema",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        returnCharLimit: core.serialization.property("return_char_limit", core.serialization.number().optional()),
        pipRequirements: core.serialization.property(
            "pip_requirements",
            core.serialization.list(PipRequirement).optional(),
        ),
        npmRequirements: core.serialization.property(
            "npm_requirements",
            core.serialization.list(NpmRequirement).optional(),
        ),
        metadata: core.serialization.property(
            "metadata_",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        defaultRequiresApproval: core.serialization.property(
            "default_requires_approval",
            core.serialization.boolean().optional(),
        ),
    });

export declare namespace ToolUpdate {
    export interface Raw {
        description?: string | null;
        tags?: string[] | null;
        source_code?: string | null;
        source_type?: string | null;
        json_schema?: Record<string, unknown> | null;
        args_json_schema?: Record<string, unknown> | null;
        return_char_limit?: number | null;
        pip_requirements?: PipRequirement.Raw[] | null;
        npm_requirements?: NpmRequirement.Raw[] | null;
        metadata_?: Record<string, unknown> | null;
        default_requires_approval?: boolean | null;
    }
}
