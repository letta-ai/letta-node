/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Letta from "../../../../../api/index";
import * as core from "../../../../../core";
import { ChatCompletionRequestMessagesItem } from "../../types/ChatCompletionRequestMessagesItem";
import { ChatCompletionRequestStop } from "../../types/ChatCompletionRequestStop";

export const ChatCompletionRequest: core.serialization.Schema<
    serializers.ChatCompletionRequest.Raw,
    Letta.ChatCompletionRequest
> = core.serialization.object({
    model: core.serialization.string(),
    messages: core.serialization.list(ChatCompletionRequestMessagesItem),
    temperature: core.serialization.number().optional(),
    topP: core.serialization.property("top_p", core.serialization.number().optional()),
    n: core.serialization.number().optional(),
    stream: core.serialization.boolean().optional(),
    stop: ChatCompletionRequestStop.optional(),
    maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
    presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
    frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
    user: core.serialization.string().optional(),
});

export declare namespace ChatCompletionRequest {
    export interface Raw {
        model: string;
        messages: ChatCompletionRequestMessagesItem.Raw[];
        temperature?: number | null;
        top_p?: number | null;
        n?: number | null;
        stream?: boolean | null;
        stop?: ChatCompletionRequestStop.Raw | null;
        max_tokens?: number | null;
        presence_penalty?: number | null;
        frequency_penalty?: number | null;
        user?: string | null;
    }
}
