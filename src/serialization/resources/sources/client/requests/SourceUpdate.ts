/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Letta from "../../../../../api/index";
import * as core from "../../../../../core";
import { EmbeddingConfig } from "../../../../types/EmbeddingConfig";

export const SourceUpdate: core.serialization.Schema<serializers.SourceUpdate.Raw, Letta.SourceUpdate> =
    core.serialization.object({
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        metadata: core.serialization.property(
            "metadata_",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        embeddingConfig: core.serialization.property("embedding_config", EmbeddingConfig.optional()),
    });

export declare namespace SourceUpdate {
    interface Raw {
        name?: string | null;
        description?: string | null;
        metadata_?: Record<string, unknown> | null;
        embedding_config?: EmbeddingConfig.Raw | null;
    }
}
