/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Letta from "../../../../../api/index";
import * as core from "../../../../../core";
import { GroupUpdateManagerConfig } from "../../types/GroupUpdateManagerConfig";

export const GroupUpdate: core.serialization.Schema<serializers.GroupUpdate.Raw, Letta.GroupUpdate> =
    core.serialization.object({
        agentIds: core.serialization.property(
            "agent_ids",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        description: core.serialization.string().optional(),
        managerConfig: core.serialization.property("manager_config", GroupUpdateManagerConfig.optional()),
        sharedBlockIds: core.serialization.property(
            "shared_block_ids",
            core.serialization.list(core.serialization.string()).optional(),
        ),
    });

export declare namespace GroupUpdate {
    export interface Raw {
        agent_ids?: string[] | null;
        description?: string | null;
        manager_config?: GroupUpdateManagerConfig.Raw | null;
        shared_block_ids?: string[] | null;
    }
}
