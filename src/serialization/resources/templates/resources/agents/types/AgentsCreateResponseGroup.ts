/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Letta from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { AgentsCreateResponseGroupManagerType } from "./AgentsCreateResponseGroupManagerType";
import { AgentsCreateResponseGroupProjectId } from "./AgentsCreateResponseGroupProjectId";
import { AgentsCreateResponseGroupTemplateId } from "./AgentsCreateResponseGroupTemplateId";
import { AgentsCreateResponseGroupBaseTemplateId } from "./AgentsCreateResponseGroupBaseTemplateId";
import { AgentsCreateResponseGroupDeploymentId } from "./AgentsCreateResponseGroupDeploymentId";
import { AgentsCreateResponseGroupSharedBlockIds } from "./AgentsCreateResponseGroupSharedBlockIds";
import { AgentsCreateResponseGroupManagerAgentId } from "./AgentsCreateResponseGroupManagerAgentId";
import { AgentsCreateResponseGroupTerminationToken } from "./AgentsCreateResponseGroupTerminationToken";
import { AgentsCreateResponseGroupMaxTurns } from "./AgentsCreateResponseGroupMaxTurns";
import { AgentsCreateResponseGroupSleeptimeAgentFrequency } from "./AgentsCreateResponseGroupSleeptimeAgentFrequency";
import { AgentsCreateResponseGroupTurnsCounter } from "./AgentsCreateResponseGroupTurnsCounter";
import { AgentsCreateResponseGroupLastProcessedMessageId } from "./AgentsCreateResponseGroupLastProcessedMessageId";
import { AgentsCreateResponseGroupMaxMessageBufferLength } from "./AgentsCreateResponseGroupMaxMessageBufferLength";
import { AgentsCreateResponseGroupMinMessageBufferLength } from "./AgentsCreateResponseGroupMinMessageBufferLength";
import { AgentsCreateResponseGroupHidden } from "./AgentsCreateResponseGroupHidden";

export const AgentsCreateResponseGroup: core.serialization.ObjectSchema<
    serializers.templates.AgentsCreateResponseGroup.Raw,
    Letta.templates.AgentsCreateResponseGroup
> = core.serialization.object({
    id: core.serialization.string(),
    managerType: core.serialization.property("manager_type", AgentsCreateResponseGroupManagerType),
    agentIds: core.serialization.property("agent_ids", core.serialization.list(core.serialization.string())),
    description: core.serialization.string(),
    projectId: core.serialization.property("project_id", AgentsCreateResponseGroupProjectId.optional()),
    templateId: core.serialization.property("template_id", AgentsCreateResponseGroupTemplateId.optional()),
    baseTemplateId: core.serialization.property("base_template_id", AgentsCreateResponseGroupBaseTemplateId.optional()),
    deploymentId: core.serialization.property("deployment_id", AgentsCreateResponseGroupDeploymentId.optional()),
    sharedBlockIds: core.serialization.property("shared_block_ids", AgentsCreateResponseGroupSharedBlockIds.optional()),
    managerAgentId: core.serialization.property("manager_agent_id", AgentsCreateResponseGroupManagerAgentId.optional()),
    terminationToken: core.serialization.property(
        "termination_token",
        AgentsCreateResponseGroupTerminationToken.optional(),
    ),
    maxTurns: core.serialization.property("max_turns", AgentsCreateResponseGroupMaxTurns.optional()),
    sleeptimeAgentFrequency: core.serialization.property(
        "sleeptime_agent_frequency",
        AgentsCreateResponseGroupSleeptimeAgentFrequency.optional(),
    ),
    turnsCounter: core.serialization.property("turns_counter", AgentsCreateResponseGroupTurnsCounter.optional()),
    lastProcessedMessageId: core.serialization.property(
        "last_processed_message_id",
        AgentsCreateResponseGroupLastProcessedMessageId.optional(),
    ),
    maxMessageBufferLength: core.serialization.property(
        "max_message_buffer_length",
        AgentsCreateResponseGroupMaxMessageBufferLength.optional(),
    ),
    minMessageBufferLength: core.serialization.property(
        "min_message_buffer_length",
        AgentsCreateResponseGroupMinMessageBufferLength.optional(),
    ),
    hidden: AgentsCreateResponseGroupHidden.optional(),
});

export declare namespace AgentsCreateResponseGroup {
    export interface Raw {
        id: string;
        manager_type: AgentsCreateResponseGroupManagerType.Raw;
        agent_ids: string[];
        description: string;
        project_id?: AgentsCreateResponseGroupProjectId.Raw | null;
        template_id?: AgentsCreateResponseGroupTemplateId.Raw | null;
        base_template_id?: AgentsCreateResponseGroupBaseTemplateId.Raw | null;
        deployment_id?: AgentsCreateResponseGroupDeploymentId.Raw | null;
        shared_block_ids?: AgentsCreateResponseGroupSharedBlockIds.Raw | null;
        manager_agent_id?: AgentsCreateResponseGroupManagerAgentId.Raw | null;
        termination_token?: AgentsCreateResponseGroupTerminationToken.Raw | null;
        max_turns?: AgentsCreateResponseGroupMaxTurns.Raw | null;
        sleeptime_agent_frequency?: AgentsCreateResponseGroupSleeptimeAgentFrequency.Raw | null;
        turns_counter?: AgentsCreateResponseGroupTurnsCounter.Raw | null;
        last_processed_message_id?: AgentsCreateResponseGroupLastProcessedMessageId.Raw | null;
        max_message_buffer_length?: AgentsCreateResponseGroupMaxMessageBufferLength.Raw | null;
        min_message_buffer_length?: AgentsCreateResponseGroupMinMessageBufferLength.Raw | null;
        hidden?: AgentsCreateResponseGroupHidden.Raw | null;
    }
}
