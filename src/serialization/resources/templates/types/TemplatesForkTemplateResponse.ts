/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";

export const TemplatesForkTemplateResponse: core.serialization.ObjectSchema<
    serializers.TemplatesForkTemplateResponse.Raw,
    Letta.TemplatesForkTemplateResponse
> = core.serialization.object({
    name: core.serialization.string(),
    id: core.serialization.string(),
    projectId: core.serialization.property("project_id", core.serialization.string()),
    projectSlug: core.serialization.property("project_slug", core.serialization.string()),
    latestVersion: core.serialization.property("latest_version", core.serialization.string()),
    description: core.serialization.string().optional(),
    templateDeploymentSlug: core.serialization.property("template_deployment_slug", core.serialization.string()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string()),
});

export declare namespace TemplatesForkTemplateResponse {
    export interface Raw {
        name: string;
        id: string;
        project_id: string;
        project_slug: string;
        latest_version: string;
        description?: string | null;
        template_deployment_slug: string;
        updated_at: string;
    }
}
