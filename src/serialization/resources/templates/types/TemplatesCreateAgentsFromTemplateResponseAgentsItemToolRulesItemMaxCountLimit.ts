/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitType } from "./TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitType";
import { TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitPromptTemplate } from "./TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitPromptTemplate";

export const TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimit: core.serialization.ObjectSchema<
    serializers.TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimit.Raw,
    Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimit
> = core.serialization.object({
    toolName: core.serialization.property("tool_name", core.serialization.string()),
    type: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitType.optional(),
    promptTemplate: core.serialization.property(
        "prompt_template",
        TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitPromptTemplate.optional(),
    ),
    maxCountLimit: core.serialization.property("max_count_limit", core.serialization.number()),
});

export declare namespace TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimit {
    export interface Raw {
        tool_name: string;
        type?: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitType.Raw | null;
        prompt_template?: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemMaxCountLimitPromptTemplate.Raw | null;
        max_count_limit: number;
    }
}
