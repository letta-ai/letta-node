/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimitType } from "./TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimitType";

export const TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimit: core.serialization.ObjectSchema<
    serializers.TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimit.Raw,
    Letta.TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimit
> = core.serialization.object({
    toolName: core.serialization.property("tool_name", core.serialization.string()),
    type: TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimitType.optional(),
    maxCountLimit: core.serialization.property("max_count_limit", core.serialization.number()),
});

export declare namespace TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimit {
    export interface Raw {
        tool_name: string;
        type?: TemplatesCreateAgentsResponseAgentsItemToolRulesItemItemMaxCountLimitType.Raw | null;
        max_count_limit: number;
    }
}
