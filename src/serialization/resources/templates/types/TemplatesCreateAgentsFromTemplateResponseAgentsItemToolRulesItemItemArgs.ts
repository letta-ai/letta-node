/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsType } from "./TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsType";
import { TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsPromptTemplate } from "./TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsPromptTemplate";
import { TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsArgs } from "./TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsArgs";

export const TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgs: core.serialization.ObjectSchema<
    serializers.TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgs.Raw,
    Letta.TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgs
> = core.serialization.object({
    toolName: core.serialization.property("tool_name", core.serialization.string()),
    type: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsType.optional(),
    promptTemplate: core.serialization.property(
        "prompt_template",
        TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsPromptTemplate.optional(),
    ),
    args: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsArgs.optional(),
});

export declare namespace TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgs {
    export interface Raw {
        tool_name: string;
        type?: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsType.Raw | null;
        prompt_template?: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsPromptTemplate.Raw | null;
        args?: TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsArgs.Raw | null;
    }
}
