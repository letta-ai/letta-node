/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodesChildArgNodesItem } from "./TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodesChildArgNodesItem";

export const TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodes: core.serialization.ObjectSchema<
    serializers.TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodes.Raw,
    Letta.TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodes
> = core.serialization.object({
    toolName: core.serialization.property("tool_name", core.serialization.string()),
    type: core.serialization.stringLiteral("constrain_child_tools").optional(),
    promptTemplate: core.serialization.property("prompt_template", core.serialization.string().optional()),
    children: core.serialization.list(core.serialization.string()),
    childArgNodes: core.serialization.property(
        "child_arg_nodes",
        core.serialization
            .list(TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodesChildArgNodesItem)
            .optional(),
    ),
});

export declare namespace TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodes {
    export interface Raw {
        tool_name: string;
        type?: "constrain_child_tools" | null;
        prompt_template?: string | null;
        children: string[];
        child_arg_nodes?:
            | TemplatesGetTemplateSnapshotResponseAgentsItemToolRulesItemChildArgNodesChildArgNodesItem.Raw[]
            | null;
    }
}
