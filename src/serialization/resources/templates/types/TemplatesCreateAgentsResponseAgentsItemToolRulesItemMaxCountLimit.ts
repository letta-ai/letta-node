/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Letta from "../../../../api/index";
import * as core from "../../../../core";
import { TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimitType } from "./TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimitType";

export const TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimit: core.serialization.ObjectSchema<
    serializers.TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimit.Raw,
    Letta.TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimit
> = core.serialization.object({
    toolName: core.serialization.property("tool_name", core.serialization.string()),
    type: TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimitType.optional(),
    maxCountLimit: core.serialization.property("max_count_limit", core.serialization.number()),
});

export declare namespace TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimit {
    export interface Raw {
        tool_name: string;
        type?: TemplatesCreateAgentsResponseAgentsItemToolRulesItemMaxCountLimitType.Raw | null;
        max_count_limit: number;
    }
}
