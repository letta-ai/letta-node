/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Letta from "../../../../../api/index";
import * as core from "../../../../../core";

export const RetrieveStreamRequest: core.serialization.Schema<
    serializers.RetrieveStreamRequest.Raw,
    Letta.RetrieveStreamRequest
> = core.serialization.object({
    startingAfter: core.serialization.property("starting_after", core.serialization.number().optional()),
    includePings: core.serialization.property("include_pings", core.serialization.boolean().optional()),
    pollInterval: core.serialization.property("poll_interval", core.serialization.number().optional()),
    batchSize: core.serialization.property("batch_size", core.serialization.number().optional()),
});

export declare namespace RetrieveStreamRequest {
    export interface Raw {
        starting_after?: number | null;
        include_pings?: boolean | null;
        poll_interval?: number | null;
        batch_size?: number | null;
    }
}
