/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { ToolAnnotations } from "./ToolAnnotations";
import { McpToolHealth } from "./McpToolHealth";

export const McpTool: core.serialization.ObjectSchema<serializers.McpTool.Raw, Letta.McpTool> = core.serialization
    .object({
        name: core.serialization.string(),
        title: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        inputSchema: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        outputSchema: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        annotations: ToolAnnotations.optional(),
        meta: core.serialization.property(
            "_meta",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        health: McpToolHealth.optional(),
    })
    .passthrough();

export declare namespace McpTool {
    export interface Raw {
        name: string;
        title?: string | null;
        description?: string | null;
        inputSchema: Record<string, unknown>;
        outputSchema?: Record<string, unknown> | null;
        annotations?: ToolAnnotations.Raw | null;
        _meta?: Record<string, unknown> | null;
        health?: McpToolHealth.Raw | null;
        [key: string]: any;
    }
}
