/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const AuthSchemeField: core.serialization.ObjectSchema<serializers.AuthSchemeField.Raw, Letta.AuthSchemeField> =
    core.serialization.object({
        name: core.serialization.string(),
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
        description: core.serialization.string(),
        type: core.serialization.string(),
        default: core.serialization.string().optional(),
        required: core.serialization.boolean().optional(),
        expectedFromCustomer: core.serialization.property(
            "expected_from_customer",
            core.serialization.boolean().optional(),
        ),
        getCurrentUserEndpoint: core.serialization.property(
            "get_current_user_endpoint",
            core.serialization.string().optional(),
        ),
    });

export declare namespace AuthSchemeField {
    export interface Raw {
        name: string;
        display_name?: string | null;
        description: string;
        type: string;
        default?: string | null;
        required?: boolean | null;
        expected_from_customer?: boolean | null;
        get_current_user_endpoint?: string | null;
    }
}
