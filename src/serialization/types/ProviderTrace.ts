/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const ProviderTrace: core.serialization.ObjectSchema<serializers.ProviderTrace.Raw, Letta.ProviderTrace> =
    core.serialization.object({
        createdById: core.serialization.property("created_by_id", core.serialization.string().optional()),
        lastUpdatedById: core.serialization.property("last_updated_by_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
        id: core.serialization.string().optional(),
        requestJson: core.serialization.property(
            "request_json",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        ),
        responseJson: core.serialization.property(
            "response_json",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        ),
        stepId: core.serialization.property("step_id", core.serialization.string().optional()),
    });

export declare namespace ProviderTrace {
    export interface Raw {
        created_by_id?: string | null;
        last_updated_by_id?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        id?: string | null;
        request_json: Record<string, unknown>;
        response_json: Record<string, unknown>;
        step_id?: string | null;
    }
}
