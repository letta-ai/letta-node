/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { FileProcessingStatus } from "./FileProcessingStatus";

export const FileMetadata: core.serialization.ObjectSchema<serializers.FileMetadata.Raw, Letta.FileMetadata> =
    core.serialization.object({
        sourceId: core.serialization.property("source_id", core.serialization.string()),
        fileName: core.serialization.property("file_name", core.serialization.string().optional()),
        originalFileName: core.serialization.property("original_file_name", core.serialization.string().optional()),
        filePath: core.serialization.property("file_path", core.serialization.string().optional()),
        fileType: core.serialization.property("file_type", core.serialization.string().optional()),
        fileSize: core.serialization.property("file_size", core.serialization.number().optional()),
        fileCreationDate: core.serialization.property("file_creation_date", core.serialization.string().optional()),
        fileLastModifiedDate: core.serialization.property(
            "file_last_modified_date",
            core.serialization.string().optional(),
        ),
        processingStatus: core.serialization.property("processing_status", FileProcessingStatus.optional()),
        errorMessage: core.serialization.property("error_message", core.serialization.string().optional()),
        totalChunks: core.serialization.property("total_chunks", core.serialization.number().optional()),
        chunksEmbedded: core.serialization.property("chunks_embedded", core.serialization.number().optional()),
        content: core.serialization.string().optional(),
        id: core.serialization.string().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
        isDeleted: core.serialization.property("is_deleted", core.serialization.boolean().optional()),
    });

export declare namespace FileMetadata {
    export interface Raw {
        source_id: string;
        file_name?: string | null;
        original_file_name?: string | null;
        file_path?: string | null;
        file_type?: string | null;
        file_size?: number | null;
        file_creation_date?: string | null;
        file_last_modified_date?: string | null;
        processing_status?: FileProcessingStatus.Raw | null;
        error_message?: string | null;
        total_chunks?: number | null;
        chunks_embedded?: number | null;
        content?: string | null;
        id?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        is_deleted?: boolean | null;
    }
}
