/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const StepMetrics: core.serialization.ObjectSchema<serializers.StepMetrics.Raw, Letta.StepMetrics> =
    core.serialization.object({
        id: core.serialization.string(),
        providerId: core.serialization.property("provider_id", core.serialization.string().optional()),
        runId: core.serialization.property("run_id", core.serialization.string().optional()),
        agentId: core.serialization.property("agent_id", core.serialization.string().optional()),
        stepStartNs: core.serialization.property("step_start_ns", core.serialization.number().optional()),
        llmRequestStartNs: core.serialization.property("llm_request_start_ns", core.serialization.number().optional()),
        llmRequestNs: core.serialization.property("llm_request_ns", core.serialization.number().optional()),
        toolExecutionNs: core.serialization.property("tool_execution_ns", core.serialization.number().optional()),
        stepNs: core.serialization.property("step_ns", core.serialization.number().optional()),
        baseTemplateId: core.serialization.property("base_template_id", core.serialization.string().optional()),
        templateId: core.serialization.property("template_id", core.serialization.string().optional()),
        projectId: core.serialization.property("project_id", core.serialization.string().optional()),
    });

export declare namespace StepMetrics {
    export interface Raw {
        id: string;
        provider_id?: string | null;
        run_id?: string | null;
        agent_id?: string | null;
        step_start_ns?: number | null;
        llm_request_start_ns?: number | null;
        llm_request_ns?: number | null;
        tool_execution_ns?: number | null;
        step_ns?: number | null;
        base_template_id?: string | null;
        template_id?: string | null;
        project_id?: string | null;
    }
}
