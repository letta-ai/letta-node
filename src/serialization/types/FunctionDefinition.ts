/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const FunctionDefinition: core.serialization.ObjectSchema<
    serializers.FunctionDefinition.Raw,
    Letta.FunctionDefinition
> = core.serialization
    .object({
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        parameters: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        strict: core.serialization.boolean().optional(),
    })
    .passthrough();

export declare namespace FunctionDefinition {
    export interface Raw {
        name: string;
        description?: string | null;
        parameters?: Record<string, unknown> | null;
        strict?: boolean | null;
        [key: string]: any;
    }
}
