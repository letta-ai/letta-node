/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { TopLogprob } from "./TopLogprob";

export const ChatCompletionTokenLogprob: core.serialization.ObjectSchema<
    serializers.ChatCompletionTokenLogprob.Raw,
    Letta.ChatCompletionTokenLogprob
> = core.serialization
    .object({
        token: core.serialization.string(),
        bytes: core.serialization.list(core.serialization.number()).optional(),
        logprob: core.serialization.number(),
        topLogprobs: core.serialization.property("top_logprobs", core.serialization.list(TopLogprob)),
    })
    .passthrough();

export declare namespace ChatCompletionTokenLogprob {
    export interface Raw {
        token: string;
        bytes?: number[] | null;
        logprob: number;
        top_logprobs: TopLogprob.Raw[];
        [key: string]: any;
    }
}
