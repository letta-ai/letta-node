/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { LettaSchemasOpenaiChatCompletionResponseToolCall } from "./LettaSchemasOpenaiChatCompletionResponseToolCall";
import { FunctionCallOutput } from "./FunctionCallOutput";

export const LettaSchemasOpenaiChatCompletionResponseMessage: core.serialization.ObjectSchema<
    serializers.LettaSchemasOpenaiChatCompletionResponseMessage.Raw,
    Letta.LettaSchemasOpenaiChatCompletionResponseMessage
> = core.serialization.object({
    content: core.serialization.string().optional(),
    toolCalls: core.serialization.property(
        "tool_calls",
        core.serialization.list(LettaSchemasOpenaiChatCompletionResponseToolCall).optional()
    ),
    role: core.serialization.string(),
    functionCall: core.serialization.property("function_call", FunctionCallOutput.optional()),
});

export declare namespace LettaSchemasOpenaiChatCompletionResponseMessage {
    interface Raw {
        content?: string | null;
        tool_calls?: LettaSchemasOpenaiChatCompletionResponseToolCall.Raw[] | null;
        role: string;
        function_call?: FunctionCallOutput.Raw | null;
    }
}
