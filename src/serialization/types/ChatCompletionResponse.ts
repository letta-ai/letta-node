/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { Choice } from "./Choice";
import { UsageStatistics } from "./UsageStatistics";

export const ChatCompletionResponse: core.serialization.ObjectSchema<
    serializers.ChatCompletionResponse.Raw,
    Letta.ChatCompletionResponse
> = core.serialization.object({
    id: core.serialization.string(),
    choices: core.serialization.list(Choice),
    created: core.serialization.date(),
    model: core.serialization.string().optional(),
    systemFingerprint: core.serialization.property("system_fingerprint", core.serialization.string().optional()),
    object: core.serialization.stringLiteral("chat.completion").optional(),
    usage: UsageStatistics,
});

export declare namespace ChatCompletionResponse {
    export interface Raw {
        id: string;
        choices: Choice.Raw[];
        created: string;
        model?: string | null;
        system_fingerprint?: string | null;
        object?: "chat.completion" | null;
        usage: UsageStatistics.Raw;
    }
}
