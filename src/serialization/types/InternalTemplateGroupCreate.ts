/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { InternalTemplateGroupCreateManagerConfig } from "./InternalTemplateGroupCreateManagerConfig";

export const InternalTemplateGroupCreate: core.serialization.ObjectSchema<
    serializers.InternalTemplateGroupCreate.Raw,
    Letta.InternalTemplateGroupCreate
> = core.serialization.object({
    agentIds: core.serialization.property("agent_ids", core.serialization.list(core.serialization.string())),
    description: core.serialization.string(),
    managerConfig: core.serialization.property("manager_config", InternalTemplateGroupCreateManagerConfig.optional()),
    projectId: core.serialization.property("project_id", core.serialization.string().optional()),
    sharedBlockIds: core.serialization.property(
        "shared_block_ids",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    hidden: core.serialization.boolean().optional(),
    baseTemplateId: core.serialization.property("base_template_id", core.serialization.string()),
    templateId: core.serialization.property("template_id", core.serialization.string()),
    deploymentId: core.serialization.property("deployment_id", core.serialization.string()),
});

export declare namespace InternalTemplateGroupCreate {
    export interface Raw {
        agent_ids: string[];
        description: string;
        manager_config?: InternalTemplateGroupCreateManagerConfig.Raw | null;
        project_id?: string | null;
        shared_block_ids?: string[] | null;
        hidden?: boolean | null;
        base_template_id: string;
        template_id: string;
        deployment_id: string;
    }
}
