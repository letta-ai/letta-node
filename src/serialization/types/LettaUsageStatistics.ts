/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { Message } from "./Message";

export const LettaUsageStatistics: core.serialization.ObjectSchema<
    serializers.LettaUsageStatistics.Raw,
    Letta.LettaUsageStatistics
> = core.serialization.object({
    messageType: core.serialization.property(
        "message_type",
        core.serialization.stringLiteral("usage_statistics").optional(),
    ),
    completionTokens: core.serialization.property("completion_tokens", core.serialization.number().optional()),
    promptTokens: core.serialization.property("prompt_tokens", core.serialization.number().optional()),
    totalTokens: core.serialization.property("total_tokens", core.serialization.number().optional()),
    stepCount: core.serialization.property("step_count", core.serialization.number().optional()),
    stepsMessages: core.serialization.property(
        "steps_messages",
        core.serialization.list(core.serialization.list(Message)).optional(),
    ),
});

export declare namespace LettaUsageStatistics {
    export interface Raw {
        message_type?: "usage_statistics" | null;
        completion_tokens?: number | null;
        prompt_tokens?: number | null;
        total_tokens?: number | null;
        step_count?: number | null;
        steps_messages?: Message.Raw[][] | null;
    }
}
