/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const ToolCreate: core.serialization.ObjectSchema<serializers.ToolCreate.Raw, Letta.ToolCreate> =
    core.serialization.object({
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        tags: core.serialization.list(core.serialization.string()).optional(),
        sourceCode: core.serialization.property("source_code", core.serialization.string()),
        sourceType: core.serialization.property("source_type", core.serialization.string().optional()),
        jsonSchema: core.serialization.property(
            "json_schema",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        returnCharLimit: core.serialization.property("return_char_limit", core.serialization.number().optional()),
    });

export declare namespace ToolCreate {
    interface Raw {
        name?: string | null;
        description?: string | null;
        tags?: string[] | null;
        source_code: string;
        source_type?: string | null;
        json_schema?: Record<string, unknown> | null;
        return_char_limit?: number | null;
    }
}
