/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { ToolJsonSchema } from "./ToolJsonSchema";

export const LettaSerializeSchemasPydanticAgentSchemaToolSchema: core.serialization.ObjectSchema<
    serializers.LettaSerializeSchemasPydanticAgentSchemaToolSchema.Raw,
    Letta.LettaSerializeSchemasPydanticAgentSchemaToolSchema
> = core.serialization.object({
    argsJsonSchema: core.serialization.property("args_json_schema", core.serialization.unknown()),
    createdAt: core.serialization.property("created_at", core.serialization.string()),
    description: core.serialization.string(),
    jsonSchema: core.serialization.property("json_schema", ToolJsonSchema),
    name: core.serialization.string(),
    returnCharLimit: core.serialization.property("return_char_limit", core.serialization.number()),
    sourceCode: core.serialization.property("source_code", core.serialization.string().optional()),
    sourceType: core.serialization.property("source_type", core.serialization.string()),
    tags: core.serialization.list(core.serialization.string()),
    toolType: core.serialization.property("tool_type", core.serialization.string()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string()),
    metadata: core.serialization.property(
        "metadata_",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
});

export declare namespace LettaSerializeSchemasPydanticAgentSchemaToolSchema {
    export interface Raw {
        args_json_schema?: unknown;
        created_at: string;
        description: string;
        json_schema: ToolJsonSchema.Raw;
        name: string;
        return_char_limit: number;
        source_code?: string | null;
        source_type: string;
        tags: string[];
        tool_type: string;
        updated_at: string;
        metadata_?: Record<string, unknown> | null;
    }
}
