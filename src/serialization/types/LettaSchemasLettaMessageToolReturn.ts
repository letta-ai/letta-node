/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { LettaSchemasLettaMessageToolReturnStatus } from "./LettaSchemasLettaMessageToolReturnStatus";

export const LettaSchemasLettaMessageToolReturn: core.serialization.ObjectSchema<
    serializers.LettaSchemasLettaMessageToolReturn.Raw,
    Letta.LettaSchemasLettaMessageToolReturn
> = core.serialization.object({
    type: core.serialization.stringLiteral("tool"),
    toolReturn: core.serialization.property("tool_return", core.serialization.string()),
    status: LettaSchemasLettaMessageToolReturnStatus,
    toolCallId: core.serialization.property("tool_call_id", core.serialization.string()),
    stdout: core.serialization.list(core.serialization.string()).optional(),
    stderr: core.serialization.list(core.serialization.string()).optional(),
});

export declare namespace LettaSchemasLettaMessageToolReturn {
    export interface Raw {
        type: "tool";
        tool_return: string;
        status: LettaSchemasLettaMessageToolReturnStatus.Raw;
        tool_call_id: string;
        stdout?: string[] | null;
        stderr?: string[] | null;
    }
}
