/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { BaseToolRuleSchema } from "./BaseToolRuleSchema";
import { ChildToolRuleSchema } from "./ChildToolRuleSchema";
import { MaxCountPerStepToolRuleSchema } from "./MaxCountPerStepToolRuleSchema";
import { ConditionalToolRuleSchema } from "./ConditionalToolRuleSchema";

export const AgentSchemaToolRulesItem: core.serialization.Schema<
    serializers.AgentSchemaToolRulesItem.Raw,
    Letta.AgentSchemaToolRulesItem
> = core.serialization.undiscriminatedUnion([
    BaseToolRuleSchema,
    ChildToolRuleSchema,
    MaxCountPerStepToolRuleSchema,
    ConditionalToolRuleSchema,
]);

export declare namespace AgentSchemaToolRulesItem {
    export type Raw =
        | BaseToolRuleSchema.Raw
        | ChildToolRuleSchema.Raw
        | MaxCountPerStepToolRuleSchema.Raw
        | ConditionalToolRuleSchema.Raw;
}
