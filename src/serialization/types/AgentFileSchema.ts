/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { LettaSchemasAgentFileAgentSchema } from "./LettaSchemasAgentFileAgentSchema";
import { GroupSchema } from "./GroupSchema";
import { BlockSchema } from "./BlockSchema";
import { FileSchema } from "./FileSchema";
import { SourceSchema } from "./SourceSchema";
import { LettaSchemasAgentFileToolSchema } from "./LettaSchemasAgentFileToolSchema";
import { McpServerSchema } from "./McpServerSchema";

export const AgentFileSchema: core.serialization.ObjectSchema<serializers.AgentFileSchema.Raw, Letta.AgentFileSchema> =
    core.serialization.object({
        agents: core.serialization.list(LettaSchemasAgentFileAgentSchema),
        groups: core.serialization.list(GroupSchema),
        blocks: core.serialization.list(BlockSchema),
        files: core.serialization.list(FileSchema),
        sources: core.serialization.list(SourceSchema),
        tools: core.serialization.list(LettaSchemasAgentFileToolSchema),
        mcpServers: core.serialization.property("mcp_servers", core.serialization.list(McpServerSchema)),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    });

export declare namespace AgentFileSchema {
    export interface Raw {
        agents: LettaSchemasAgentFileAgentSchema.Raw[];
        groups: GroupSchema.Raw[];
        blocks: BlockSchema.Raw[];
        files: FileSchema.Raw[];
        sources: SourceSchema.Raw[];
        tools: LettaSchemasAgentFileToolSchema.Raw[];
        mcp_servers: McpServerSchema.Raw[];
        metadata?: Record<string, string> | null;
        created_at?: string | null;
    }
}
