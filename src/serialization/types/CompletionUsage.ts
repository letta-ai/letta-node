/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { CompletionTokensDetails } from "./CompletionTokensDetails";
import { PromptTokensDetails } from "./PromptTokensDetails";

export const CompletionUsage: core.serialization.ObjectSchema<serializers.CompletionUsage.Raw, Letta.CompletionUsage> =
    core.serialization
        .object({
            completionTokens: core.serialization.property("completion_tokens", core.serialization.number()),
            promptTokens: core.serialization.property("prompt_tokens", core.serialization.number()),
            totalTokens: core.serialization.property("total_tokens", core.serialization.number()),
            completionTokensDetails: core.serialization.property(
                "completion_tokens_details",
                CompletionTokensDetails.optional(),
            ),
            promptTokensDetails: core.serialization.property("prompt_tokens_details", PromptTokensDetails.optional()),
        })
        .passthrough();

export declare namespace CompletionUsage {
    export interface Raw {
        completion_tokens: number;
        prompt_tokens: number;
        total_tokens: number;
        completion_tokens_details?: CompletionTokensDetails.Raw | null;
        prompt_tokens_details?: PromptTokensDetails.Raw | null;
        [key: string]: any;
    }
}
