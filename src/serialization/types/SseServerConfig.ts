/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { McpServerType } from "./McpServerType";

export const SseServerConfig: core.serialization.ObjectSchema<serializers.SseServerConfig.Raw, Letta.SseServerConfig> =
    core.serialization.object({
        serverName: core.serialization.property("server_name", core.serialization.string()),
        type: McpServerType.optional(),
        serverUrl: core.serialization.property("server_url", core.serialization.string()),
        authHeader: core.serialization.property("auth_header", core.serialization.string().optional()),
        authToken: core.serialization.property("auth_token", core.serialization.string().optional()),
        customHeaders: core.serialization.property(
            "custom_headers",
            core.serialization.record(core.serialization.string(), core.serialization.string().optional()).optional(),
        ),
    });

export declare namespace SseServerConfig {
    export interface Raw {
        server_name: string;
        type?: McpServerType.Raw | null;
        server_url: string;
        auth_header?: string | null;
        auth_token?: string | null;
        custom_headers?: Record<string, string | null | undefined> | null;
    }
}
