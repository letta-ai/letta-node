/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { TextContent } from "./TextContent";
import { ToolCallContent } from "./ToolCallContent";
import { ReasoningContent } from "./ReasoningContent";
import { RedactedReasoningContent } from "./RedactedReasoningContent";
import { OmittedReasoningContent } from "./OmittedReasoningContent";

export const LettaMessageContentUnion: core.serialization.Schema<
    serializers.LettaMessageContentUnion.Raw,
    Letta.LettaMessageContentUnion
> = core.serialization.undiscriminatedUnion([
    TextContent,
    ToolCallContent,
    ReasoningContent,
    RedactedReasoningContent,
    OmittedReasoningContent,
]);

export declare namespace LettaMessageContentUnion {
    export type Raw =
        | TextContent.Raw
        | ToolCallContent.Raw
        | ReasoningContent.Raw
        | RedactedReasoningContent.Raw
        | OmittedReasoningContent.Raw;
}
