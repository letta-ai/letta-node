/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { HiddenReasoningMessageState } from "./HiddenReasoningMessageState";

export const HiddenReasoningMessage: core.serialization.ObjectSchema<
    serializers.HiddenReasoningMessage.Raw,
    Letta.HiddenReasoningMessage
> = core.serialization.object({
    id: core.serialization.string(),
    date: core.serialization.date(),
    name: core.serialization.string().optional(),
    messageType: core.serialization.property(
        "message_type",
        core.serialization.stringLiteral("hidden_reasoning_message"),
    ),
    otid: core.serialization.string().optional(),
    senderId: core.serialization.property("sender_id", core.serialization.string().optional()),
    state: HiddenReasoningMessageState,
    hiddenReasoning: core.serialization.property("hidden_reasoning", core.serialization.string().optional()),
});

export declare namespace HiddenReasoningMessage {
    export interface Raw {
        id: string;
        date: string;
        name?: string | null;
        message_type: "hidden_reasoning_message";
        otid?: string | null;
        sender_id?: string | null;
        state: HiddenReasoningMessageState.Raw;
        hidden_reasoning?: string | null;
    }
}
