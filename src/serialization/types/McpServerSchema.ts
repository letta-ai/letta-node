/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const McpServerSchema: core.serialization.ObjectSchema<serializers.McpServerSchema.Raw, Letta.McpServerSchema> =
    core.serialization.object({
        id: core.serialization.string(),
        serverType: core.serialization.property("server_type", core.serialization.string()),
        serverName: core.serialization.property("server_name", core.serialization.string()),
        serverUrl: core.serialization.property("server_url", core.serialization.string().optional()),
        stdioConfig: core.serialization.property(
            "stdio_config",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        metadata: core.serialization.property(
            "metadata_",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
    });

export declare namespace McpServerSchema {
    export interface Raw {
        id: string;
        server_type: string;
        server_name: string;
        server_url?: string | null;
        stdio_config?: Record<string, unknown> | null;
        metadata_?: Record<string, unknown> | null;
    }
}
