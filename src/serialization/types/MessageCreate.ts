/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { MessageCreateRole } from "./MessageCreateRole";
import { MessageCreateContent } from "./MessageCreateContent";

export const MessageCreate: core.serialization.ObjectSchema<serializers.MessageCreate.Raw, Letta.MessageCreate> =
    core.serialization.object({
        type: core.serialization.stringLiteral("message").optional(),
        role: MessageCreateRole,
        content: MessageCreateContent,
        name: core.serialization.string().optional(),
        otid: core.serialization.string().optional(),
        senderId: core.serialization.property("sender_id", core.serialization.string().optional()),
        batchItemId: core.serialization.property("batch_item_id", core.serialization.string().optional()),
        groupId: core.serialization.property("group_id", core.serialization.string().optional()),
    });

export declare namespace MessageCreate {
    export interface Raw {
        type?: "message" | null;
        role: MessageCreateRole.Raw;
        content: MessageCreateContent.Raw;
        name?: string | null;
        otid?: string | null;
        sender_id?: string | null;
        batch_item_id?: string | null;
        group_id?: string | null;
    }
}
