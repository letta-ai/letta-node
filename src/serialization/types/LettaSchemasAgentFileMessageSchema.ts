/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { MessageRole } from "./MessageRole";
import { LettaSchemasAgentFileMessageSchemaContent } from "./LettaSchemasAgentFileMessageSchemaContent";
import { ChatCompletionMessageFunctionToolCallInput } from "./ChatCompletionMessageFunctionToolCallInput";
import { LettaSchemasMessageToolReturn } from "./LettaSchemasMessageToolReturn";
import { LettaSchemasAgentFileMessageSchemaApprovalsItem } from "./LettaSchemasAgentFileMessageSchemaApprovalsItem";

export const LettaSchemasAgentFileMessageSchema: core.serialization.ObjectSchema<
    serializers.LettaSchemasAgentFileMessageSchema.Raw,
    Letta.LettaSchemasAgentFileMessageSchema
> = core.serialization.object({
    type: core.serialization.stringLiteral("message").optional(),
    role: MessageRole,
    content: LettaSchemasAgentFileMessageSchemaContent,
    name: core.serialization.string().optional(),
    otid: core.serialization.string().optional(),
    senderId: core.serialization.property("sender_id", core.serialization.string().optional()),
    batchItemId: core.serialization.property("batch_item_id", core.serialization.string().optional()),
    groupId: core.serialization.property("group_id", core.serialization.string().optional()),
    id: core.serialization.string(),
    model: core.serialization.string().optional(),
    agentId: core.serialization.property("agent_id", core.serialization.string().optional()),
    toolCalls: core.serialization.property(
        "tool_calls",
        core.serialization.list(ChatCompletionMessageFunctionToolCallInput).optional(),
    ),
    toolCallId: core.serialization.property("tool_call_id", core.serialization.string().optional()),
    toolReturns: core.serialization.property(
        "tool_returns",
        core.serialization.list(LettaSchemasMessageToolReturn).optional(),
    ),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    approve: core.serialization.boolean().optional(),
    approvalRequestId: core.serialization.property("approval_request_id", core.serialization.string().optional()),
    denialReason: core.serialization.property("denial_reason", core.serialization.string().optional()),
    approvals: core.serialization.list(LettaSchemasAgentFileMessageSchemaApprovalsItem).optional(),
});

export declare namespace LettaSchemasAgentFileMessageSchema {
    export interface Raw {
        type?: "message" | null;
        role: MessageRole.Raw;
        content: LettaSchemasAgentFileMessageSchemaContent.Raw;
        name?: string | null;
        otid?: string | null;
        sender_id?: string | null;
        batch_item_id?: string | null;
        group_id?: string | null;
        id: string;
        model?: string | null;
        agent_id?: string | null;
        tool_calls?: ChatCompletionMessageFunctionToolCallInput.Raw[] | null;
        tool_call_id?: string | null;
        tool_returns?: LettaSchemasMessageToolReturn.Raw[] | null;
        created_at?: string | null;
        approve?: boolean | null;
        approval_request_id?: string | null;
        denial_reason?: string | null;
        approvals?: LettaSchemasAgentFileMessageSchemaApprovalsItem.Raw[] | null;
    }
}
