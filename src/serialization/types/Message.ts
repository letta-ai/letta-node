/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { MessageRole } from "./MessageRole";
import { MessageContentItem } from "./MessageContentItem";
import { ChatCompletionMessageFunctionToolCall } from "./ChatCompletionMessageFunctionToolCall";
import { ToolReturn } from "./ToolReturn";

export const Message: core.serialization.ObjectSchema<serializers.Message.Raw, Letta.Message> =
    core.serialization.object({
        createdById: core.serialization.property("created_by_id", core.serialization.string().optional()),
        lastUpdatedById: core.serialization.property("last_updated_by_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
        id: core.serialization.string().optional(),
        agentId: core.serialization.property("agent_id", core.serialization.string().optional()),
        model: core.serialization.string().optional(),
        role: MessageRole,
        content: core.serialization.list(MessageContentItem).optional(),
        name: core.serialization.string().optional(),
        toolCalls: core.serialization.property(
            "tool_calls",
            core.serialization.list(ChatCompletionMessageFunctionToolCall).optional(),
        ),
        toolCallId: core.serialization.property("tool_call_id", core.serialization.string().optional()),
        stepId: core.serialization.property("step_id", core.serialization.string().optional()),
        otid: core.serialization.string().optional(),
        toolReturns: core.serialization.property("tool_returns", core.serialization.list(ToolReturn).optional()),
        groupId: core.serialization.property("group_id", core.serialization.string().optional()),
        senderId: core.serialization.property("sender_id", core.serialization.string().optional()),
        batchItemId: core.serialization.property("batch_item_id", core.serialization.string().optional()),
        isErr: core.serialization.property("is_err", core.serialization.boolean().optional()),
    });

export declare namespace Message {
    export interface Raw {
        created_by_id?: string | null;
        last_updated_by_id?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        id?: string | null;
        agent_id?: string | null;
        model?: string | null;
        role: MessageRole.Raw;
        content?: MessageContentItem.Raw[] | null;
        name?: string | null;
        tool_calls?: ChatCompletionMessageFunctionToolCall.Raw[] | null;
        tool_call_id?: string | null;
        step_id?: string | null;
        otid?: string | null;
        tool_returns?: ToolReturn.Raw[] | null;
        group_id?: string | null;
        sender_id?: string | null;
        batch_item_id?: string | null;
        is_err?: boolean | null;
    }
}
