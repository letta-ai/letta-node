/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { DynamicManager } from "./DynamicManager";
import { RoundRobinManager } from "./RoundRobinManager";
import { SleeptimeManager } from "./SleeptimeManager";
import { SupervisorManager } from "./SupervisorManager";
import { VoiceSleeptimeManager } from "./VoiceSleeptimeManager";

export const GroupSchemaManagerConfig: core.serialization.Schema<
    serializers.GroupSchemaManagerConfig.Raw,
    Letta.GroupSchemaManagerConfig
> = core.serialization.undiscriminatedUnion([
    DynamicManager,
    RoundRobinManager,
    SleeptimeManager,
    SupervisorManager,
    VoiceSleeptimeManager,
]);

export declare namespace GroupSchemaManagerConfig {
    export type Raw =
        | DynamicManager.Raw
        | RoundRobinManager.Raw
        | SleeptimeManager.Raw
        | SupervisorManager.Raw
        | VoiceSleeptimeManager.Raw;
}
