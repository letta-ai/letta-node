/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { MessageCreate } from "./MessageCreate";

export const LettaRequest: core.serialization.ObjectSchema<serializers.LettaRequest.Raw, Letta.LettaRequest> =
    core.serialization.object({
        messages: core.serialization.list(MessageCreate),
        useAssistantMessage: core.serialization.property(
            "use_assistant_message",
            core.serialization.boolean().optional()
        ),
        assistantMessageToolName: core.serialization.property(
            "assistant_message_tool_name",
            core.serialization.string().optional()
        ),
        assistantMessageToolKwarg: core.serialization.property(
            "assistant_message_tool_kwarg",
            core.serialization.string().optional()
        ),
    });

export declare namespace LettaRequest {
    interface Raw {
        messages: MessageCreate.Raw[];
        use_assistant_message?: boolean | null;
        assistant_message_tool_name?: string | null;
        assistant_message_tool_kwarg?: string | null;
    }
}
