/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { LettaSchemasMessageToolReturnStatus } from "./LettaSchemasMessageToolReturnStatus";

export const LettaSchemasMessageToolReturn: core.serialization.ObjectSchema<
    serializers.LettaSchemasMessageToolReturn.Raw,
    Letta.LettaSchemasMessageToolReturn
> = core.serialization.object({
    toolCallId: core.serialization.property("tool_call_id", core.serialization.unknown().optional()),
    status: LettaSchemasMessageToolReturnStatus,
    stdout: core.serialization.list(core.serialization.string()).optional(),
    stderr: core.serialization.list(core.serialization.string()).optional(),
    funcResponse: core.serialization.property("func_response", core.serialization.string().optional()),
});

export declare namespace LettaSchemasMessageToolReturn {
    export interface Raw {
        tool_call_id?: unknown | null;
        status: LettaSchemasMessageToolReturnStatus.Raw;
        stdout?: string[] | null;
        stderr?: string[] | null;
        func_response?: string | null;
    }
}
