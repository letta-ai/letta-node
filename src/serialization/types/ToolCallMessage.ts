/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { ToolCallMessageToolCall } from "./ToolCallMessageToolCall";

export const ToolCallMessage: core.serialization.ObjectSchema<serializers.ToolCallMessage.Raw, Letta.ToolCallMessage> =
    core.serialization.object({
        id: core.serialization.string(),
        date: core.serialization.date(),
        name: core.serialization.string().optional(),
        messageType: core.serialization.property("message_type", core.serialization.stringLiteral("tool_call_message")),
        toolCall: core.serialization.property("tool_call", ToolCallMessageToolCall),
    });

export declare namespace ToolCallMessage {
    export interface Raw {
        id: string;
        date: string;
        name?: string | null;
        message_type: "tool_call_message";
        tool_call: ToolCallMessageToolCall.Raw;
    }
}
