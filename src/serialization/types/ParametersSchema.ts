/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { ParameterProperties } from "./ParameterProperties";

export const ParametersSchema: core.serialization.ObjectSchema<
    serializers.ParametersSchema.Raw,
    Letta.ParametersSchema
> = core.serialization.object({
    type: core.serialization.string().optional(),
    properties: core.serialization.record(core.serialization.string(), ParameterProperties),
    required: core.serialization.list(core.serialization.string()).optional(),
});

export declare namespace ParametersSchema {
    export interface Raw {
        type?: string | null;
        properties: Record<string, ParameterProperties.Raw>;
        required?: string[] | null;
    }
}
