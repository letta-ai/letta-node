/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const SystemMessage: core.serialization.ObjectSchema<serializers.SystemMessage.Raw, Letta.SystemMessage> =
    core.serialization.object({
        id: core.serialization.string(),
        date: core.serialization.date(),
        name: core.serialization.string().optional(),
        messageType: core.serialization.property("message_type", core.serialization.stringLiteral("system_message")),
        otid: core.serialization.string().optional(),
        senderId: core.serialization.property("sender_id", core.serialization.string().optional()),
        content: core.serialization.string(),
    });

export declare namespace SystemMessage {
    export interface Raw {
        id: string;
        date: string;
        name?: string | null;
        message_type: "system_message";
        otid?: string | null;
        sender_id?: string | null;
        content: string;
    }
}
