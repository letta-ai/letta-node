/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";
import { ChatCompletionTokenLogprob } from "./ChatCompletionTokenLogprob";

export const ChoiceLogprobs: core.serialization.ObjectSchema<serializers.ChoiceLogprobs.Raw, Letta.ChoiceLogprobs> =
    core.serialization
        .object({
            content: core.serialization.list(ChatCompletionTokenLogprob).optional(),
            refusal: core.serialization.list(ChatCompletionTokenLogprob).optional(),
        })
        .passthrough();

export declare namespace ChoiceLogprobs {
    export interface Raw {
        content?: ChatCompletionTokenLogprob.Raw[] | null;
        refusal?: ChatCompletionTokenLogprob.Raw[] | null;
        [key: string]: any;
    }
}
