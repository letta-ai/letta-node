/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Letta from "../../api/index";
import * as core from "../../core";

export const BlockUpdate: core.serialization.ObjectSchema<serializers.BlockUpdate.Raw, Letta.BlockUpdate> =
    core.serialization.object({
        value: core.serialization.string().optional(),
        limit: core.serialization.number().optional(),
        name: core.serialization.string().optional(),
        isTemplate: core.serialization.property("is_template", core.serialization.boolean().optional()),
        label: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        metadata: core.serialization.property(
            "metadata_",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
    });

export declare namespace BlockUpdate {
    interface Raw {
        value?: string | null;
        limit?: number | null;
        name?: string | null;
        is_template?: boolean | null;
        label?: string | null;
        description?: string | null;
        metadata_?: Record<string, unknown> | null;
    }
}
